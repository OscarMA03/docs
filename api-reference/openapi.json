{
  "openapi": "3.1.0",
  "info": {
    "title": "Proxy Server Builder Prime API",
    "description": "Proxy server for Builder Prime API with additional validation, calendar management, and lead processing capabilities",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://proxy-server-builder-prime.onrender.com"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check the server status and health",
        "responses": {
          "200": {
            "description": "Server health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/calendar-entries": {
      "get": {
        "summary": "Get Calendar Entries",
        "description": "Fetch suggested appointment time slots for a specific appointment",
        "parameters": [
          {
            "name": "opportunityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The opportunity ID to fetch time slots for"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of suggested appointment time slots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSlot"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Schedule Calendar Entry",
        "description": "Schedule an appointment time slot",
        "parameters": [
          {
            "name": "opportunityId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The opportunity ID to schedule"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppointmentData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment scheduled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/leads": {
      "get": {
        "summary": "Get Leads",
        "description": "Retrieve leads/opportunities with optional filtering",
        "parameters": [
          {
            "name": "opportunity-id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific opportunity ID"
          },
          {
            "name": "lead-status",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by lead status"
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by phone number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Maximum number of leads to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of leads",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Lead"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/create-lead": {
      "post": {
        "summary": "Create Simple Lead",
        "description": "Create a simplified lead with core fields only",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleLeadData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Lead created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeadResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gate1/validate-all": {
      "get": {
        "summary": "Gate 1 Validate All",
        "description": "Validate all required fields for lead creation",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "First name to validate"
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Last name to validate"
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Phone number to validate"
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Email address to validate"
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Address to validate"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gate1/first-check": {
      "get": {
        "summary": "Gate 1 First Check",
        "description": "First validation check to determine if a new opportunity ID is needed",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "First name to validate"
          },
          {
            "name": "lastName",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Last name to validate (optional)"
          },
          {
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Phone number to validate"
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Email address to validate"
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Address to validate"
          }
        ],
        "responses": {
          "200": {
            "description": "First check validation results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirstCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/to-do-tasks/v1": {
      "post": {
        "summary": "Create To-Do Task",
        "description": "Create a new to-do task",
        "parameters": [
          {
            "name": "opportunityId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Optional opportunity ID to associate with the task"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sms/v1": {
      "get": {
        "summary": "Get SMS Conversation",
        "description": "Retrieve SMS conversation between two phone numbers",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "From phone number"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "To phone number"
          }
        ],
        "responses": {
          "200": {
            "description": "SMS conversation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSConversationResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send SMS",
        "description": "Send an SMS message",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SMSData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SMS sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SMSResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "port": {
            "type": "integer",
            "example": 3001
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "available": {
            "type": "boolean"
          }
        }
      },
      "AppointmentData": {
        "type": "object",
        "required": ["startTime", "endTime"],
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "AppointmentResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "opportunityId": {
            "type": "string"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Lead": {
        "type": "object",
        "properties": {
          "opportunityId": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "leadStatus": {
            "type": "string"
          },
          "leadSource": {
            "type": "string"
          },
          "lastModifiedDate": {
            "type": "integer"
          }
        }
      },
      "SimpleLeadData": {
        "type": "object",
        "required": ["firstName", "email", "phone", "addressLine1"],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "LeadResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "data": {
            "$ref": "#/components/schemas/Lead"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "gate1": {
            "type": "object",
            "properties": {
              "isValid": {
                "type": "boolean"
              },
              "canCreateOpportunity": {
                "type": "boolean"
              },
              "missingFields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "invalidFields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FirstCheckResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "firstCheck": {
            "type": "object",
            "properties": {
              "allValidationsPass": {
                "type": "boolean"
              },
              "needsNewOpportunityId": {
                "type": "boolean"
              },
              "validationLoop": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskData": {
        "type": "object",
        "required": ["title", "type"],
        "properties": {
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["TODO", "CALL", "EMAIL"]
          },
          "description": {
            "type": "string"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "taskId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SMSData": {
        "type": "object",
        "required": ["text"],
        "properties": {
          "text": {
            "type": "string"
          },
          "from": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "mediaUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SMSResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "messageId": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "SMSConversationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "conversation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time"
                },
                "direction": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for authentication (automatically set from BUILDER_PRIME_API_KEY environment variable)"
      }
    }
  }
}